-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html

conky.config = {
	update_interval = 1,
	cpu_avg_samples = 2,
	net_avg_samples = 2,
	out_to_console = false,
	override_utf8_locale = true,
	double_buffer = true,
	no_buffers = true,
	text_buffer_size = 32768,
	imlib_cache_size = 0,
	own_window = true,
	own_window_type = 'normal',
	own_window_argb_visual = true,
	own_window_argb_value = 30,
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
	border_inner_margin = 5,
	border_outer_margin = 10,
	alignment = 'top_left',
	gap_x = 0,
	gap_y = -1075,
	draw_shades = false,
	draw_outline = false,
	draw_borders = false,
	draw_graph_borders = false,
	use_xft = true,
	font = 'Ubuntu Mono:size=12',
        lua_draw_hook_pre = 'rings',
        lua_load = '/etc/conky/drawRings.lua',
	xftalpha = 0.8,
	uppercase = false,
	default_color = 'white',
	own_window_colour = '#000000',
	minimum_width = 1585, 
	maximum_width = 1585,
	minimum_height = 1050
};
conky.text = [[
${goto 1230} ${font sans-serif:bold:size=10}SYSTEM ${hr 2}
${goto 1250} ${font sans-serif:normal:size=8}OS Type: $alignr $sysname 
${goto 1250} Architecture: $alignr 100 $machine
${goto 1250} Kernel: $alignr $kernel
${goto 1250} Hostname:$alignr $nodename
${goto 1250} Distro: $alignr ${execi 6000 lsb_release -d | grep 'Descr'|awk {'print $2 " " $3" " $4" " $5'}}
${goto 1250} Uptime:$alignr$uptime
${goto 1250} File System: $alignr${fs_type}
${goto 1250} Processes: $alignr ${execi 1000 ps aux | wc -l}

${goto 1230} ${font sans-serif:bold:size=10}CPU ${hr 2}
${goto 1250} ${font sans-serif:normal:size=10}${execi 1000 grep model /proc/cpuinfo | cut -d : -f2 | tail -1 | sed 's/\s//'}
${goto 1250} CPU 1: ${cpu cpu1}% ${cpubar cpu1}
${goto 1250} CPU 2: ${cpu cpu2}% ${cpubar cpu2}
${goto 1250} CPU 3: ${cpu cpu3}% ${cpubar cpu3}
${goto 1250} CPU 4: ${cpu cpu4}% ${cpubar cpu4}
${goto 1250} CPU 5: ${cpu cpu5}% ${cpubar cpu5}
${goto 1250} CPU 6: ${cpu cpu6}% ${cpubar cpu6}
${goto 1250} CPU 7: ${cpu cpu7}% ${cpubar cpu7}
${goto 1250} CPU 8: ${cpu cpu8}% ${cpubar cpu8}

${goto 1230} ${font sans-serif:bold:size=10}MEMORY ${hr 2}
${goto 1250} ${font sans-serif:normal:size=8}RAM $alignc $mem / $memmax $alignr $memperc%
${goto 1250} $membar
${goto 1250} SWAP $alignc ${swap} / ${swapmax} $alignr ${swapperc}%
${goto 1250} ${swapbar}

${goto 1230} ${font sans-serif:bold:size=10}GRAPHICS ${hr 2}
${goto 1250} ${font sans-serif:normal:size=8}Vendor: $alignr ${execi 6000 lspci | grep VGA | awk {'print $5" "$6'}}
${goto 1250} Model: $alignr ${execi 6000 lspci | grep VGA | awk {'print $7" " $8" "$9" "$10'}}
${goto 1250} Memory: $alignr ${execi 6000 glxinfo | grep -E -i 'device|memory' | grep "Total available memory" | awk {'print $4'}}

${goto 1230} ${font sans-serif:bold:size=10}DISK USAGE ${hr 2}
${goto 1250} ${font sans-serif:normal:size=8}root $alignc ${fs_used /} / ${fs_size /} $alignr ${fs_used_perc /}%
${goto 1250} ${fs_bar /}
${goto 1250} ${font sans-serif:normal:size=8}home $alignc ${fs_used /home} / ${fs_size /home} $alignr ${fs_used_perc /home}%
${goto 1250} ${fs_bar /home}
${goto 1250} ${font sans-serif:normal:size=8}data $alignc ${fs_used /mnt/data} / ${fs_size /mnt/data} $alignr ${fs_used_perc /mnt/data}%
${goto 1250} ${fs_bar /mnt/data}
${goto 1250} ${font sans-serif:normal:size=8}3tb_hdd $alignc ${fs_used /mnt/3tb_hdd} / ${fs_size /mnt/3tb_hdd} $alignr ${fs_used_perc /mnt/3tb_hdd}%
${goto 1250} ${fs_bar /mnt/3tb_hdd}
${goto 1250} ${font sans-serif:normal:size=8}8tb_hdd $alignc ${fs_used /mnt/8tb_hdd} / ${fs_size /mnt/8tb_hdd} $alignr ${fs_used_perc /mnt/8tb_hdd}%
${goto 1250} ${fs_bar /mnt/8tb_hdd}

${goto 1230} ${font Ubuntu:bold:size=10}NETWORK ${hr 2}
${goto 1250} ${font sans-serif:normal:size=8}Local IP: ${execi 1000 ip a | grep inet | grep -vw lo | grep -v inet6 | cut -d \/ -f1 | sed 's/[^0-9\.]*//g'}${alignr}External IP: ${execi 1000  wget -q -O- http://ipecho.net/plain; echo}
${goto 1250} ${font sans-serif:normal:size=8}Down: ${downspeed enp7s0}  ${alignr}Up: ${upspeed enp7s0} 
${goto 1250} ${color lightgray}${downspeedgraph enp7s0 65,200 } ${alignr}${upspeedgraph enp7s0 65,200 }$color
]];
